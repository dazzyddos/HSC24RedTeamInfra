---
- name: Setup Evilginx
  hosts: all
  become: yes
  vars:
    project_directory: /opt/evilginx
    go_install_dir: "/usr/local"
    go_tarball_dir: "/tmp"
    evilginx_user: evilginx

  tasks:
  - name: Update apt packages
    apt:
      update_cache: yes

  - name: Install below programs
    apt: 
        name: "{{ item }}"
        state: present
    with_items:
          - unzip
          - tmux
          - net-tools
          - build-essential
          - nodejs

  - name: Find the latest Golang version download link
    ansible.builtin.shell: wget -qO- https://go.dev/dl/ | grep -oP 'go[0-9]+\.[0-9]+\.[0-9]+\.linux-amd64\.tar\.gz' | head -1
    register: go_download_link

  - name: Set full download URL for the latest Golang version
    set_fact:
      go_full_url: "https://go.dev/dl/{{ go_download_link.stdout }}"

  - name: Download the latest Golang tarball
    get_url:
      url: "{{ go_full_url }}"
      dest: "{{ go_tarball_dir }}/golang.tar.gz"
      timeout: 60

  - name: Remove existing Golang installation
    ansible.builtin.file:
      path: "{{ go_install_dir }}/go"
      state: absent

  - name: Extract Golang tarball
    ansible.builtin.unarchive:
      src: "{{ go_tarball_dir }}/golang.tar.gz"
      dest: "{{ go_install_dir }}"
      remote_src: yes
      extra_opts: [--strip-components=1]

  - name: Set Golang environment variables globally
    ansible.builtin.lineinfile:
      path: /etc/profile.d/golang.sh
      line: "{{ item }}"
      create: yes
    with_items:
      - 'export PATH=$PATH:{{ go_install_dir }}/go/bin'
      - 'export GOPATH=$HOME/go'
      - 'export PATH=$PATH:$GOPATH/bin'
    notify:
      - Reload profile

  - name: Clone Evilginx repository
    ansible.builtin.git:
      repo: 'https://github.com/kgretzky/evilginx2.git'
      dest: "{{ project_directory }}"
      clone: yes
      update: yes

  - name: Run make command to build the Binary
    ansible.builtin.command:
      chdir: "{{ project_directory }}"
      cmd: make

  - name: Create a new user for Evilginx
    user:
      name: "{{ evilginx_user }}"
      shell: /bin/bash
      create_home: yes

  - name: Create .ssh directory for Evilginx user
    file:
      path: "/home/{{ evilginx_user }}/.ssh"
      state: directory
      owner: "{{ evilginx_user }}"
      group: "{{ evilginx_user }}"
      mode: '0700'

  - name: Copy authorized_keys to Evilginx user's .ssh directory
    copy:
      src: "/home/ubuntu/.ssh/authorized_keys"
      dest: "/home/{{ evilginx_user }}/.ssh/authorized_keys"
      owner: "{{ evilginx_user }}"
      group: "{{ evilginx_user }}"
      mode: '0600'

  - name: Add Evilginx user to sudoers
    lineinfile:
      path: /etc/sudoers
      line: "{{ evilginx_user }} ALL=(ALL) NOPASSWD:ALL"
      validate: 'visudo -cf %s'
      state: present
    become: yes

  - name: Set ownership of Evilginx directory
    file:
      path: "{{ project_directory }}"
      state: directory
      owner: "{{ evilginx_user }}"
      group: "{{ evilginx_user }}"
      recurse: yes

  - name: Install libcap2-bin to provide setcap command
    apt:
      name: libcap2-bin
      state: present

  - name: Give evilginx binary permissions to use privileged ports (53 and 443)
    command: /sbin/setcap 'cap_net_bind_service=+ep' {{ project_directory }}/build/evilginx

  - name: Stop and disable systemd-resolved
    systemd:
      name: systemd-resolved
      state: stopped
      enabled: no

  - name: Remove /etc/resolv.conf
    file:
      path: /etc/resolv.conf
      state: absent

  - name: Create /etc/resolv.conf with custom nameserver
    copy:
      dest: /etc/resolv.conf
      content: |
        nameserver 8.8.8.8
      owner: root
      group: root
      mode: '0644'

  - name: Add hostname to /etc/hosts to prevent sudo warning
    lineinfile:
      path: /etc/hosts
      line: '127.0.0.1 {{ ansible_hostname }}'
      state: present

  handlers:
  - name: Reload profile
    ansible.builtin.shell: . /etc/profile.d/golang.sh
    args:
      executable: /bin/bash
